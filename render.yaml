# Render Blueprint for Route Monitor Backend
# This creates TWO separate services:
# 1. PostgreSQL Database (free plan)
# 2. Django Web Service (free plan)

services:
  - type: web
    name: route-monitor-backend
    plan: free
    runtime: python
    buildCommand: |
      pip install -r requirements.txt
      python manage.py collectstatic --noinput
      python manage.py migrate
    startCommand: gunicorn route_monitor.wsgi:application
    envVars:
      - key: DEBUG
        value: "false"
      - key: DJANGO_SECRET_KEY
        generateValue: true
      - key: ALLOWED_HOSTS
        value: route-monitor-backend.onrender.com
      - key: DATABASE_URL
        fromDatabase:
          name: route-monitor-db
          property: connectionString
      # CORS is set to allow all origins for Capacitor.js frontend
      # No additional CORS_ORIGINS needed since CORS_ALLOW_ALL_ORIGINS = True

  - type: worker
    name: keep-alive-worker
    plan: free
    runtime: python
    buildCommand: |
      pip install -r requirements.txt
    startCommand: python manage.py keep_alive --url https://route-monitor-backend.onrender.com/api/health/ --interval 300
    envVars:
      - key: DEBUG
        value: "false"
      - key: DJANGO_SECRET_KEY
        fromService:
          type: web
          name: route-monitor-backend
          envVarKey: DJANGO_SECRET_KEY
      - key: ALLOWED_HOSTS
        value: route-monitor-backend.onrender.com
      - key: DATABASE_URL
        fromDatabase:
          name: route-monitor-db
          property: connectionString

databases:
  - name: route-monitor-db
    plan: free
    databaseName: route_monitor
    user: route_monitor_user
